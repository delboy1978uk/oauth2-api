#!/usr/bin/env php
<?php

chdir(dirname(__DIR__));

define('APPLICATION_PATH', realpath('.'));

define('APPLICATION_ENV', (getenv('APPLICATION_ENV')
    ? getenv('APPLICATION_ENV')
    : 'production'));

require_once './vendor/autoload.php';

use Bone\ConsoleApplication;
use Del\Console\UserCommand;
use Del\Common\ContainerService;
use Del\Common\Config\DbCredentials;
use OAuth\Command\ClientCommand;
use Del\UserPackage;
use OAuth\Command\ScopeCreateCommand;
use OAuth\OAuthPackage;


$server = new \Bone\Server\Environment([]);
$configFolder = APPLICATION_PATH . '/config';
$config = $server->fetchConfig($configFolder, APPLICATION_ENV);

$containerSvc = ContainerService::getInstance();

$dbname = $config['db']['database'];
$user = $config['db']['user'];
$pass = $config['db']['pass'];
$host = $config['db']['host'];

$credentials = new DbCredentials();
$credentials->setUser($user)
    ->setPassword($pass)
    ->setDatabase($dbname)
    ->setHost($host);

$svc = ContainerService::getInstance();
$svc->setDbCredentials($credentials);
$svc->setProxyPath(realpath(APPLICATION_PATH.'/data/proxies'));
$svc->registerToContainer(new UserPackage());
$svc->registerToContainer(new OAuthPackage());
$container = $svc->getContainer();

// Override the Del\Entity\User with our OAuth user class
/** @var \Del\Service\UserService $userService */
$userService = $container['service.user'];
$userService->setUserClass(\OAuth\OAuthUser::class);
$container['service.user'] = $userService;

// Set up the application
$app = new ConsoleApplication();

$userCommand = new UserCommand();
$userCommand->setName('user:reset-pass');
$clientCommand = new ClientCommand($container['oauth.service.client'], $userService);
$scopeCommand = new ScopeCreateCommand($container['repository.Scope']);

$app->add($userCommand);
$app->add($clientCommand);
$app->add($scopeCommand);

$app->run();
